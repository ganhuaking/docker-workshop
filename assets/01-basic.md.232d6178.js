import{_ as a,o as e,c as t,O as r}from"./chunks/framework.1b1a3dad.js";const u=JSON.parse('{"title":"Docker 基本知識","description":"","frontmatter":{},"headers":[],"relativePath":"01-basic.md","filePath":"01-basic.md"}'),o={name:"01-basic.md"},n=r(`<h1 id="docker-基本知識" tabindex="-1">Docker 基本知識 <a class="header-anchor" href="#docker-基本知識" aria-label="Permalink to &quot;Docker 基本知識&quot;">​</a></h1><h2 id="docker-的原理" tabindex="-1">Docker 的原理 <a class="header-anchor" href="#docker-的原理" aria-label="Permalink to &quot;Docker 的原理&quot;">​</a></h2><h2 id="docker-與虛擬機-vm-比較" tabindex="-1">Docker 與虛擬機（VM）比較 <a class="header-anchor" href="#docker-與虛擬機-vm-比較" aria-label="Permalink to &quot;Docker 與虛擬機（VM）比較&quot;">​</a></h2><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><ul><li><em>Image</em> - 映像檔</li><li><em>Container</em> - 容器</li><li><em>Repository</em> - 倉庫</li></ul><h2 id="基本指令" tabindex="-1">基本指令 <a class="header-anchor" href="#基本指令" aria-label="Permalink to &quot;基本指令&quot;">​</a></h2><table><thead><tr><th>指令</th><th>功能</th></tr></thead><tbody><tr><td>docker pull</td><td>下載映像檔</td></tr><tr><td>docker images</td><td>看目前有哪些映像檔</td></tr><tr><td>docker rmi</td><td>刪除映像檔</td></tr><tr><td>docker run</td><td>建立容器並執行指令</td></tr><tr><td>docker start/stop/restart</td><td>操作容器</td></tr><tr><td>docker ps</td><td>看目前有啟動哪些容器</td></tr><tr><td>docker rm</td><td>刪除容器</td></tr></tbody></table><h3 id="hello-world" tabindex="-1">Hello world <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello world&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ docker run -d nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">$ docker images</span></span>
<span class="line"><span style="color:#A6ACCD;">$ docker ps</span></span>
<span class="line"><span style="color:#A6ACCD;">$ docker stop</span></span>
<span class="line"><span style="color:#A6ACCD;">$ docker rm</span></span></code></pre></div><h3 id="port-forwarding" tabindex="-1">Port Forwarding <a class="header-anchor" href="#port-forwarding" aria-label="Permalink to &quot;Port Forwarding&quot;">​</a></h3><p>從本機的 port 轉到把 container 上</p><h3 id="run-command" tabindex="-1">Run Command <a class="header-anchor" href="#run-command" aria-label="Permalink to &quot;Run Command&quot;">​</a></h3><p>在 container 的環境裡，執行指令</p><h3 id="volume-mapping" tabindex="-1">Volume Mapping <a class="header-anchor" href="#volume-mapping" aria-label="Permalink to &quot;Volume Mapping&quot;">​</a></h3><p>把 host 的資料夾，映射到 container 裡</p><h3 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;Environment&quot;">​</a></h3><p>環境變數</p><h3 id="link" tabindex="-1">Link <a class="header-anchor" href="#link" aria-label="Permalink to &quot;Link&quot;">​</a></h3><p>連結 container</p>`,19),d=[n];function l(i,s,c,h,p,m){return e(),t("div",null,d)}const b=a(o,[["render",l]]);export{u as __pageData,b as default};
